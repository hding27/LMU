function varargout = untitled(varargin)

    gui_Singleton = 1;
    gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @untitled_OpeningFcn, ...
                   'gui_OutputFcn',  @untitled_OutputFcn, ...
                   'gui_LayoutFcn',  [], ...
                   'gui_Callback',   []);
    if nargin && ischar(varargin{1})
        gui_State.gui_Callback = str2func(varargin{1});
    end

    if nargout
        [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
    else
        gui_mainfcn(gui_State, varargin{:});
    end
    


% --- Executes just before untitled is made visible.
function untitled_OpeningFcn(hObject, eventdata, handles, varargin)

    handles.output = hObject;
    guidata(hObject, handles);

    clc
    global mscriptpath
    if(isdeployed)
        [bla mscriptpath]=dos('cd');
        mscriptpath=strcat(mscriptpath,'\\');
    else
        mscriptpath=mfilename('fullpath');
        lastslash=strfind(mscriptpath,'\');
        lastslash=lastslash(length(lastslash));
        mscriptpath=mscriptpath(1:lastslash)
    end
    
    if(exist(strcat(mscriptpath,'speccalibpath.txt'),'file')~=0)
        mf=fopen(strcat(mscriptpath,'speccalibpath.txt'),'r');
        mpt=fscanf(mf,'%c');
        set(handles.edit2,'String',mpt);
        fclose(mf);
    end
    if(exist(strcat(mscriptpath,'values.txt'),'file')~=0)
        
        mf=fopen(strcat(mscriptpath,'values.txt'),'r');
        val=textscan(mf,'%s\t%f');
        if(iscell(val)==1)
            if(strcmp(class(val{2}(2)),'double')==1)
                if(size(val{2},1)==13)
                    set(handles.edit6,'String',val{2}(1));
                    set(handles.edit7,'String',val{2}(2));
                    set(handles.edit8,'String',val{2}(3));
                    
                    set(handles.ll,'String',val{2}(4));
                    set(handles.rr,'String',val{2}(5));
                    set(handles.tt,'String',val{2}(6));
                    set(handles.bb,'String',val{2}(7));
                    set(handles.background_left,'String',val{2}(8));
                    set(handles.background_right,'String',val{2}(9));
                    set(handles.background_top,'String',val{2}(10));
                    set(handles.background_bottom,'String',val{2}(11));
                    set(handles.tritium_left,'String',val{2}(12));
                    set(handles.tritium_right,'String',val{2}(13));                    
                    
                end
            end
        end
        fclose(mf);
    end

    axes(handles.axes2);
    ylabel('Charge [a.u.]');
    xlabel('Energy [eV]');
    title('Energy spectrum integrated');
    
    


% --- Outputs from this function are returned to the command line.
function varargout = untitled_OutputFcn(hObject, eventdata, handles)
    varargout{1} = handles.output;



function edit1_Callback(hObject, eventdata, handles)


function edit1_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end


% --- Executes on button press in pushbutton1.
function pushbutton1_Callback(hObject, eventdata, handles)

    [mfile mpath] = uigetfile('*.png','select shot file','d:\\data');
    set(handles.edit1,'String',mpath);
    aa=strfind(mfile,'shot');
    cc=mfile(aa(length(aa))+4:aa(length(aa))+7);
    set(handles.text32,'String',mfile(aa(length(aa))+8:length(mfile)));
    set(handles.cshot,'String',cc);
    dofile(handles,mpath, mfile);
%     axes(handles.axes1);
%     imim=double(imread(strcat(mpath,mfile)));
%     mmax=max(imim(:));
%     mmin=min(imim(:));
%     imim=(imim-mmin)*256/(mmax-mmin);
%     image(imim);

% --- Executes during object creation, after setting all properties.


% --- Executes during object creation, after setting all properties.
function figure1_CreateFcn(hObject, eventdata, handles)

% --- Executes during object creation, after setting all properties.
function axes1_CreateFcn(hObject, eventdata, handles)


% --- Executes on button press in pushbutton2.
function pushbutton2_Callback(hObject, eventdata, handles)
    global mstop;
    mstop=0;
    set(handles.pushbutton2,'Enable','off');
    mnextfile=sprintf('%04d',str2num(get(handles.cshot,'String'))+1);
    mnextfile=sprintf('%s%s%s','shot',mnextfile,get(handles.text32,'String'));
    while(mstop==0)
    
        if(exist(strcat(get(handles.edit1,'String'),mnextfile),'file')~=0)
            pause(0.5);
            dofile(handles,get(handles.edit1,'String'),mnextfile);
            mnextfile=sprintf('%04d',str2num(get(handles.cshot,'String'))+1);
            mnextfile=strcat('shot',mnextfile,get(handles.text32,'String'));

        end
        pause(0.100);
        drawnow();
    end
    set(handles.pushbutton2,'Enable','on');

% --- Executes on button press in pushbutton3.
function pushbutton3_Callback(hObject, eventdata, handles)
    global mstop;
    mstop=1;

function dofile(handles,mpath, mfile)

    axes(handles.axes1);
    imim=double(imread(strcat(mpath,mfile)));
    imim=imim./16;
    imim2=imim;
    mmax=max(imim2(:));
    mmin=min(imim2(:));
    imim2=(imim2-mmin)*256/(mmax-mmin);
    image(imim2);
    aa=strfind(mfile,'shot');
    cc=mfile(aa(length(aa))+4:aa(length(aa))+7);
    set(handles.cshot,'String',cc);

    xl=floor(str2double(get(handles.ll,'String')));
    xr=floor(str2double(get(handles.rr,'String')));
    yt=floor(str2double(get(handles.tt,'String')));
    yb=floor(str2double(get(handles.bb,'String')));

    tri_l=floor(str2double(get(handles.tritium_left,'String')));
    tri_r=floor(str2double(get(handles.tritium_right,'String')));
    
    tri_length=str2double(get(handles.edit7,'String'));
    tri_off=str2double(get(handles.edit8,'String'));
    
    bg_l=str2double(get(handles.background_left,'String'));
    bg_t=str2double(get(handles.background_top,'String'));
    bg_r=str2double(get(handles.background_right,'String'));
    bg_b=str2double(get(handles.background_bottom,'String'));
    
    charge_calib = str2double(get(handles.edit6,'String'));
    axes(handles.axes1);
    bg_val=0;
    
    if((xl~=0)&&(xr~=0)&&(yt~=0)&&(yb~=0))
        line([xl-1 xr+1],[yt-1 yt-1],'Color','red');
        line([xl-1 xr+1],[yb+1 yb+1],'Color','red');
        line([xl-1 xl-1],[yt-1 yb+1],'Color','red');
        line([xr+1 xr+1],[yt-1 yb+1],'Color','red');
        
        mspec=zeros(xr-xl+1,2,'double');
        for(xx=xl:1:xr)
            for(yy=yt:1:yb)
                
                mspec(xx-xl+1,2)=mspec(xx-xl+1,2)+double(imim(yy,xx,1))*charge_calib;
            end
        end
        %if defined - subtract background:
        if((bg_l~=0)&&(bg_t~=0)&&(bg_r~=0)&&(bg_b~=0))
            
            line([bg_l-1 bg_r+1],[bg_t-1 bg_t-1],'Color',[0.8 0.8 0.8]);
            line([bg_l-1 bg_r+1],[bg_b+1 bg_b+1],'Color',[0.8 0.8 0.8]);
            line([bg_l-1 bg_l-1],[bg_t-1 bg_b+1],'Color',[0.8 0.8 0.8]);
            line([bg_r+1 bg_r+1],[bg_t-1 bg_b+1],'Color',[0.8 0.8 0.8]);
            
            bg_val=0;
            
            for(xx=round(bg_l):1:round(bg_r))
                for(yy=round(bg_t):1:round(bg_b))
                    
                    bg_val=bg_val+double(imim(yy,xx,1))/(bg_r-bg_l)/(bg_b-bg_t);
                    
                end
            end
            bg_val=bg_val*(yb-yt)*charge_calib;
            mspec(:,2)=mspec(:,2)-bg_val;
           
            
        end
        
        axes(handles.axes2);
        
        %calibrate the spectrum
        mf=fopen(get(handles.edit2,'String'),'r');
        if((tri_l~=0)&&(tri_r~=0)&&(mf>0))
            
           %mf = fopen(get(handles.edit2,'String'),'r');
           
           calib=cell2mat(textscan(mf,'%f%f','HeaderLines',2));
           
           quasipeak_st=-1313;
           quasipeak_en=-1313;
           
           quasipeak_charge=0;
           pp=polyfit(calib(:,2),calib(:,1),10);
           ppder=polyder(pp);

           for(xx=xl:1:xr)
               xxx=-((xx-tri_l)*tri_length/(tri_r-tri_l)+tri_off);
               mspec(xx-xl+1,1)= polyval(pp,xxx);
               mspec(xx-xl+1,2)=mspec(xx-xl+1,2)/polyval(ppder,xxx)/tri_length*(tri_r-tri_l);
           end
           for(xx=2:length(mspec(:,2)))
               quasipeak_charge=quasipeak_charge+mspec(xx,2)*abs(mspec(xx,1)-mspec(xx-1,1));
           end

           quasipeak_val=max(mspec(:,2));
           for(xx=1:length(mspec(:,1)))
               if((mspec(xx,2)>quasipeak_val/2)&&(quasipeak_st==-1313))
                   quasipeak_st=xx;
               elseif((mspec(xx,2)<quasipeak_val/2)&&(quasipeak_st~=-1313))
                   quasipeak_en=xx;
               end
            end
           if(quasipeak_st==-1313)
               quasipeak_st=1;
           end
           if(quasipeak_en==-1313)
               quasipeak_en=length(mspec(:,1));
           end
           
           quasipeak_pos=quasipeak_st;
           

           quasipeak_pos_mev=0.000001*mspec(quasipeak_st,1);
           quasipeak_spread=100*(mspec(quasipeak_st,1)-mspec(quasipeak_en,1))/mspec(quasipeak_pos,1);
           
           plot(mspec(:,1),mspec(:,2),'--rs','LineWidth',1,'MarkerEdgeColor','k','MarkerFaceColor','g','MarkerSize',2);
            title('Spectrum');
            ylabel('dq/dE [pC/eV]');
            xlabel('Energy[eV]');
           


           set(handles.edit3,'String',num2str(quasipeak_pos_mev));
           set(handles.edit4,'String',num2str(quasipeak_spread));
           set(handles.edit5,'String',num2str(quasipeak_charge));
           
           if(get(handles.checkbox2,'Value')==get(handles.checkbox2,'Max'))
                
               if(exist(strcat(get(handles.edit1,'String'),'log.txt'),'file')==0)
                    fid = fopen(strcat(get(handles.edit1,'String'),'log.txt'),'w');
                    mstr='Log ver 0.3';
                    fprintf(fid,'%s\r\n',mstr);
         %           mstr='Peak pos[MeV]\tFWHM Spread[%]\tCharge[pC]\tGas Pressure[mBar]\tGas Cell Length[mm]\tGas Cell pos[mm]\tDazzler\tComment\r\n';
                    fprintf(fid,'%c\t%c\t%c\t%c\r\n','Shot #','Peak pos[MeV]','FWHM Spread[%]','Charge[pC]');
                    fclose(fid);
               end
               fid = fopen(strcat(get(handles.edit1,'String'),'log.txt'),'a+');
               fseek(fid,0,'bof');
               mstr=fscanf(fid,'%s',3);
               if(strcmp(mstr,'Logver0.3')==0)
                   if(strcmp(questdlg('Found an existing log, but of wrong format.. REWRITE?','QUESTION!','Jawohl','Njiet','Njiet'),'Jawohl')~=0)
                       fclose(fid);
                        fid = fopen(strcat(get(handles.edit1,'String'),'log.txt'),'w');
                        mstr='Log ver 0.2';
                        fprintf(fid,'%s\r\n',mstr);
         %           mstr='Peak pos[MeV]\tFWHM Spread[%]\tCharge[pC]\tGas Pressure[mBar]\tGas Cell Length[mm]\tGas Cell pos[mm]\tDazzler\tComment\r\n';
                        fprintf(fid,'%s\t%s\t%s\t%s\r\n','Shot #','Peak pos[MeV]','FWHM Spread[%]','Charge[pC]');

                   else
                       fclose(fid);
                       set(handles.checkbox2,'Value',get(handles.checkbox2,'Value','Min'));
                       return;
                   end
               end
               fseek(fid,0,'eof');
               mstr=sprintf('%s\t%f\t%f\t%f\r\n',get(handles.cshot,'String'),quasipeak_pos_mev,quasipeak_spread,quasipeak_charge);
               fprintf(fid,'%s',mstr);
               fclose(fid);
               
               %save spectrum
               if(get(handles.checkbox3,'Value')==get(handles.checkbox3,'Max'))
                   
                   mstr=strcat(get(handles.edit1,'String'),'shot_',get(handles.cshot,'String'),'_spec.txt');
                   fid = fopen(mstr,'w'); 
                   fprintf(fid,'%s\t%s\r\n','Energy[MeV]','dq/dE[pC/MeV]');
                   for(ii=1:size(mspec,1))
                       fprintf(fid,'%f\t%f\r\n',mspec(ii,1)*(1e-6),mspec(ii,2)*(1e6));
                   end
                   fclose(fid);
%                   dlmwrite(mstr,mspec,'-append','delimiter','\t','newline','pc');
                   
               end
           end
           
        else
            if(mf~=-1)
                fclose(mf);
            end
            fprintf(1,'tri_l= %d',tri_l);
            fprintf(1,'tri_r= %d',tri_r);
            get(handles.edit2,'String')
            plot(mspec(:,2));
        end
        
        
        fclose('all');
    end
    
    
    
    
    
    
% --- Executes on button press in pushbutton4.
function pushbutton4_Callback(hObject, eventdata, handles)
    
    set(handles.text3,'FontSize',14);
    set(handles.text3,'FontWeight','bold');

    set(handles.text3,'String','Click top-left corner..');
    [x y]=ginput(1);
    set(handles.ll,'String',num2str(x));
    set(handles.tt,'String',num2str(y));

    set(handles.text3,'String','Click bottom-right corner..');
    [x y]=ginput(1);
    set(handles.rr,'String',num2str(x));
    set(handles.bb,'String',num2str(y));

    set(handles.text3,'FontSize',8);
    set(handles.text3,'FontWeight','normal');
    set(handles.text3,'String','Search rectangle:');

    mnextfile=strcat('shot',sprintf('%04d',str2num(get(handles.cshot,'String'))),get(handles.text32,'String'));
    dofile(handles,get(handles.edit1,'String'),mnextfile);


% --- Executes during object creation, after setting all properties.
function axes2_CreateFcn(hObject, eventdata, handles)



function edit2_Callback(hObject, eventdata, handles)

% --- Executes during object creation, after setting all properties.
function edit2_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end


% --- Executes on button press in pushbutton5.
function pushbutton5_Callback(hObject, eventdata, handles)
    global mscriptpath;

    [mfile mpath] = uigetfile('*.*','choose spectrum calibration file','c:\\');
    if(mfile==0)
        return;
    end
    set(handles.edit2, 'String', strcat(mpath,mfile));

    mf=fopen(strcat(mscriptpath,'speccalibpath.txt'),'w');
    fprintf(mf,'%c',strcat(mpath,mfile));
    fclose(mf);


% --- Executes on button press in pushbutton6.
function pushbutton6_Callback(hObject, eventdata, handles)

    set(handles.text22,'FontSize',14);
    
    set(handles.text22,'String','Click left end..');
    [x y]=ginput(1);
    set(handles.tritium_left,'String',num2str(x));


    set(handles.text22,'String','Click right end..');
    [x y]=ginput(1);
    set(handles.tritium_right,'String',num2str(x));


    set(handles.text22,'FontSize',10);
    set(handles.text22,'String','tritium target');

    mnextfile=strcat('shot',sprintf('%04d',str2num(get(handles.cshot,'String'))),get(handles.text32,'String'));
    dofile(handles,get(handles.edit1,'String'),mnextfile);



function edit3_Callback(hObject, eventdata, handles)


% --- Executes during object creation, after setting all properties.
function edit3_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end



function edit4_Callback(hObject, eventdata, handles)


% --- Executes during object creation, after setting all properties.
function edit4_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end



function edit5_Callback(hObject, eventdata, handles)


% --- Executes during object creation, after setting all properties.
function edit5_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end



function edit6_Callback(hObject, eventdata, handles)


% --- Executes during object creation, after setting all properties.
function edit6_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end



function edit7_Callback(hObject, eventdata, handles)

% --- Executes during object creation, after setting all properties.
function edit7_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end



function edit8_Callback(hObject, eventdata, handles)


% --- Executes during object creation, after setting all properties.
function edit8_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end


% --- Executes on button press in pushbutton4.
function pushbutton7_Callback(hObject, eventdata, handles)


% --- Executes on button press in pushbutton6.
function pushbutton8_Callback(hObject, eventdata, handles)



function edit9_Callback(hObject, eventdata, handles)

% --- Executes during object creation, after setting all properties.
function edit9_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end



function edit10_Callback(hObject, eventdata, handles)


% --- Executes during object creation, after setting all properties.
function edit10_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end



function edit11_Callback(hObject, eventdata, handles)


% --- Executes during object creation, after setting all properties.
function edit11_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end



function edit_gas_pressure_Callback(hObject, eventdata, handles)

% --- Executes during object creation, after setting all properties.
function edit_gas_pressure_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end



function edit_gas_cell_len_Callback(hObject, eventdata, handles)

% --- Executes during object creation, after setting all properties.
function edit_gas_cell_len_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end



function edit_gas_cell_pos_Callback(hObject, eventdata, handles)


% --- Executes during object creation, after setting all properties.
function edit_gas_cell_pos_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end



function edit_comment_Callback(hObject, eventdata, handles)
% --- Executes during object creation, after setting all properties.

function edit_comment_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end


% --- Executes on button press in checkbox2.
function checkbox2_Callback(hObject, eventdata, handles)



% --- Executes during object creation, after setting all properties.
function text32_CreateFcn(hObject, eventdata, handles)


% --- Executes on button press in pushbutton9.
function pushbutton9_Callback(hObject, eventdata, handles)

    set(handles.text33,'FontSize',14);
    set(handles.text33,'FontWeight','bold');

    set(handles.text33,'String','Click top-left corner..');
    [x y]=ginput(1);
    set(handles.background_left,'String',num2str(x));
    set(handles.background_top,'String',num2str(y));

    set(handles.text33,'String','Click bottom-right corner..');
    [x y]=ginput(1);
    set(handles.background_right,'String',num2str(x));
    set(handles.background_bottom,'String',num2str(y));

    set(handles.text33,'FontSize',8);
    set(handles.text33,'FontWeight','normal');
    set(handles.text33,'String','Background sample:');

    mnextfile=strcat('shot',sprintf('%04d',str2num(get(handles.cshot,'String'))),get(handles.text32,'String'));
    dofile(handles,get(handles.edit1,'String'),mnextfile);


% --- Executes on button press in checkbox3.
function checkbox3_Callback(hObject, eventdata, handles)
% hObject    handle to checkbox3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of checkbox3


% --- Executes on button press in pushbutton10.
function pushbutton10_Callback(hObject, eventdata, handles)
% save values for ever!
% hObject    handle to pushbutton10 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

    global mscriptpath;


    mf=fopen(strcat(mscriptpath,'values.txt'),'w');
    fprintf(mf,'charge_calib:\t%g\r\n',str2double(get(handles.edit6,'String')));
    fprintf(mf,'tritium_length:\t%g\r\n',str2double(get(handles.edit7,'String')));
    fprintf(mf,'tritium_offset:\t%g\r\n',str2double(get(handles.edit8,'String')));

    fprintf(mf,'roi_l:\t%g\r\n',str2double(get(handles.ll,'String')));
    fprintf(mf,'roi_r:\t%g\r\n',str2double(get(handles.rr,'String')));    
    fprintf(mf,'roi_t:\t%g\r\n',str2double(get(handles.tt,'String')));
    fprintf(mf,'roi_b:\t%g\r\n',str2double(get(handles.bb,'String')));    
    fprintf(mf,'ron_l:\t%g\r\n',str2double(get(handles.background_left,'String')));
    fprintf(mf,'ron_r:\t%g\r\n',str2double(get(handles.background_right,'String')));
    fprintf(mf,'ron_t:\t%g\r\n',str2double(get(handles.background_top,'String')));
    fprintf(mf,'ron_b:\t%g\r\n',str2double(get(handles.background_bottom,'String')));
    fprintf(mf,'tri_l:\t%g\r\n',str2double(get(handles.tritium_left,'String')));
    fprintf(mf,'tri_r:\t%g\r\n',str2double(get(handles.tritium_right,'String')));    
    fclose(mf);



function edit16_Callback(hObject, eventdata, handles)
% hObject    handle to edit16 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit16 as text
%        str2double(get(hObject,'String')) returns contents of edit16 as a double


% --- Executes during object creation, after setting all properties.
function edit16_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit16 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in checkbox4.
function checkbox4_Callback(hObject, eventdata, handles)
% hObject    handle to checkbox4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of checkbox4


% --- OPEN CAM
function pushbutton11_Callback(hObject, eventdata, handles)



% --- CLOSE CAM
function pushbutton12_Callback(hObject, eventdata, handles)



% --- GRAB SW TRIGGERED
function pushbutton13_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton13 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- GRAB HW TRIGGERED
function pushbutton14_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton14 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

%%------------------------------------------------------


